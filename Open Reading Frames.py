import re
from Bio.Seq import translate

pattern = re.compile(r'(?=(ATG(?:...)*?)(?=TAG|TGA|TAA))')

Seq= """TAGCTCGTTATAACGCCAGCACACCGCAGACTCCGGCAAGGTATATTTGAAGGATGGGGT\
TCATATTAAAGTTGATTGAGTGCGTTCGCCCACCAGGAACGAAGCTATATGGTTGTTTAC\
CGGCTCCGGTGACCAAATCACAGTACCAACTCGTTCTCAGCTAAGTAGGCCGCTGAAGCA\
ATTTATGCACAAGTTGTCTGTCTCCCAAAAAACAAGTATCGCCTTCCCCCGGTAGAAGGT\
GTTATACGTAATGGGACTTGTGCAATGGCACAGGACTCATAATAGCGCCCTCAGATCCGT\
GACGCTAGGTAATATGCTGAAACTCATTGTGGCATTTACGTATGGCGGGAGACCCACCAG\
TCGCATGCGGATTTCCGACTGCCTGCAGACATCATATAAAGTCCCTTTGGCGCGTGGATG\
CGCTATAAATTTCTTCTGCCCTAGCTAGGGCAGAAGAAATTTATAGCGCATACCCGCCAA\
CGTGCTTGAATGACACTCCTAACTGGCTAGCGGTAAGACGGTGGCCCCACCCGTCGCACC\
GTGTGCATCTGAAACACAAGACTGCCCAATTGGAAAGCGGCAGACAGTGACAGGAAGGGC\
CACTGGAAGACCCTTGATTACAATGTAAGGGAAGTTCAGTTACGGAACTGCGGCCCCTAT\
GTCCCAGCTGGTTACATAAAGCATGCCCCTTCGGTCGGGCGTGCGCCCTAGAGCATCTCA\
CAGATCCAGTTAAGGCACGCTGCGGTAATTCAGTATTTTACCTGCTGACAAGAAAGGCAG\
ATGGATCTCACGGCTTAGAATCTCTTTCAAAGCTGACTCGCGAAATTCATCATCCTTAGA\
GGCTTGACCACCCTGCGCTTACCTAGTTTGGTGGGACCTGGGGTTCAG"""

revcompseq = Seq[::-1].maketrans("ATGC", "TACG") #reverse complement

forward = pattern.findall(Seq) #forward search
reverse = pattern.findall(Seq[::-1].translate(revcompseq)) #backward search
all_strands = forward + reverse

proteins = []
for i in all_strands:
    proteins.append(translate(i))

def Remove(duplicate):
    final_list = []
    for num in duplicate:
        if num not in final_list:
            final_list.append(num)
    return final_list

print(*Remove(proteins), sep='\n')
